import sqlite3
import os
import random

# –ò–º—è —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_FILE = "words.db"

def connect_to_db():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite."""
    if not os.path.exists(DB_FILE):
        raise FileNotFoundError("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö words.db –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    return sqlite3.connect(DB_FILE)

def get_all_words():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å–ª–æ–≤–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã words."""
    conn = connect_to_db()
    cursor = conn.cursor()
    cursor.execute("SELECT word, part_of_speech, transcription, translation FROM words")
    words = cursor.fetchall()
    conn.close()
    return words

def get_random_words(count=5):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã."""
    words = get_all_words()
    if count > len(words):
        count = len(words)
    return random.sample(words, count)

# üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî –º–æ–∂–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
if __name__ == "__main__":
    print("üîç –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –∏ –≤—ã–±–æ—Ä–∫–∏ —Å–ª–æ–≤...")
    try:
        words = get_random_words(5)
        for w in words:
            print(f"üìò {w[0]} [{w[2]}] ‚Äî {w[3]}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
