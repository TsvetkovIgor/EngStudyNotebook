import time
from sqlite_esnb import get_all_words
import random

def study_words(word_list):
    """–≠—Ç–∞–ø –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö —Å–ª–æ–≤ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
    print("\nüìö –≠—Ç–∞–ø 1. –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–ª–æ–≤:")
    for i, word_data in enumerate(word_list, 1):
        word, part, transcr, translation = word_data
        print(f"\n{i}. {word} [{transcr}] ‚Äî {translation}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ª–æ–≤–∞...")

def run_test(word_list):
    """–ü—Ä–æ–≤–æ–¥–∏—Ç —Ç–µ—Å—Ç –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –≤—Å–µ —Å–ª–æ–≤–∞ –Ω–µ –±—É–¥—É—Ç –ø—Ä–æ–π–¥–µ–Ω—ã –≤–µ—Ä–Ω–æ."""
    print("\nüß™ –≠—Ç–∞–ø 2. –¢–µ—Å—Ç –Ω–∞ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:")

    remaining = word_list.copy()
    while remaining:
        random.shuffle(remaining)
        incorrect = []

        for word, part, transcr, translation in remaining:
            print(f"\n–°–ª–æ–≤–æ: {word}")
            answer = input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥: ").strip().lower()

            # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
            clean_translation = translation.lower().replace(';', '').replace(',', '').replace('.', '').strip()
            clean_answer = answer.lower().strip()

            if clean_answer == clean_translation:

                print("‚úÖ –í–µ—Ä–Ω–æ!")
            else:
                print(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {translation}")
                incorrect.append((word, part, transcr, translation))

        if incorrect:
            print(f"\nüîÅ –û—à–∏–±–∫–∏: {len(incorrect)}. –ü–æ–≤—Ç–æ—Ä–∏–º —ç—Ç–∏ —Å–ª–æ–≤–∞...")
            remaining = incorrect
        else:
            print("üéâ –í—Å–µ —Å–ª–æ–≤–∞ –∑–∞–ø–æ–º–Ω–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
            return True


def learning_loop():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—É—á–µ–Ω–∏—è: –∑–∞–ø–æ–º–Ω–∏—Ç—å ‚Üí –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Üí —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫"""
    all_words = get_all_words()
    learned_count = 5
    learned_words = all_words[:learned_count]

    while learned_count <= len(all_words):
        print(f"\nüîÑ –¢–µ–∫—É—â–∞—è –≥—Ä—É–ø–ø–∞ —Å–ª–æ–≤: {learned_count} —à—Ç.")
        study_words(learned_words)

        choice = input("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç? (y/n): ").strip().lower()
        if choice != 'y':
            print("üö™ –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
            break

        success = run_test(learned_words)
        if success:
            if learned_count >= len(all_words):
                print("üéì –í—Å–µ —Å–ª–æ–≤–∞ –∏–∑—É—á–µ–Ω—ã! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!")
                break

            learned_count += 1  # –¥–æ–±–∞–≤–∏–º –æ–¥–Ω–æ —Å–ª–æ–≤–æ
            learned_words = all_words[:learned_count]
            print(f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ. –¢–µ–ø–µ—Ä—å –∏–∑—É—á–∞–µ–º {learned_count} —Å–ª–æ–≤.")
        else:
            print("üîÅ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å–ª–æ–≤, –±—ã–ª–∏ –æ—à–∏–±–∫–∏...")

if __name__ == "__main__":
    print("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ EngStudyNotebook!")
    print("–†–µ–∂–∏–º: –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–≤.")
    learning_loop()
